{"ast":null,"code":"var _jsxFileName = \"/home/siddharthprajapati/Desktop/youtube-react-form/src/App.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./app.css\";\nimport FormInput from \"./components/FormInput\";\nimport \"./components/formInput.css\";\nimport { useFormik } from \"formik\";\nimport Select from \"react-select\";\nimport csc from 'country-state-city';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [value, setValue] = useState({\n    uame: \"\",\n    email: \"\",\n    mobileno: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const inputs = [{\n    id: 1,\n    name: \"name\",\n    type: \"text\",\n    placeholder: \"Name\",\n    errorMessage: \"Name should be 3-16 characters and shouldn't include any special character!\",\n    label: \"Name\",\n    pattern: \"^[A-Za-z0-9]{3,16}$\",\n    required: true\n  }, {\n    id: 2,\n    name: \"email\",\n    type: \"email\",\n    placeholder: \"Email\",\n    errorMessage: \"It should be a valid email address!\",\n    label: \"Email\",\n    required: true\n  }, {\n    id: 3,\n    name: \"mobileno\",\n    type: \"tel\",\n    placeholder: \"Mobile No.\",\n    label: \"Mobile No\"\n  }, {\n    id: 4,\n    name: \"password\",\n    type: \"password\",\n    placeholder: \"Password\",\n    errorMessage: \"Password should be 8-20 characters and include at least 1 letter, 1 number and 1 special character!\",\n    label: \"Password\",\n    pattern: `^(?=.*[0-9])(?=.*[a-zA-Z])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,20}$`,\n    required: true\n  }, {\n    id: 5,\n    name: \"confirmPassword\",\n    type: \"password\",\n    placeholder: \"Confirm Password\",\n    errorMessage: \"Passwords don't match!\",\n    label: \"Confirm Password\",\n    pattern: value.password,\n    required: true\n  }\n  // {\n  //   id: 6,\n  //   name: \"country\",\n  //   type: \"text\",\n  //   placeholder: \"Country\",\n  //   label: \"Country\",\n  // },\n  ];\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(\"Submitted\");\n  };\n  const onChange = e => {\n    setValue({\n      ...value,\n      [e.target.name]: e.target.value\n    });\n  };\n  const addressFromik = useFormik({\n    initialValues: {\n      country: \"India\",\n      state: null,\n      city: null\n    },\n    onSubmit: values => console.log(JSON.stringify(values))\n  });\n  const countries = csc.getAllCountries();\n  const updatedCountries = countries.map(country => ({\n    label: country.name,\n    value: country.id,\n    ...country\n  }));\n  const updatedStates = countryId => csc.getStatesOfCountry(countryId).map(state => ({\n    label: state.name,\n    value: state.id,\n    ...state\n  }));\n  const updatedCities = stateId => csc.getCitiesOfState(stateId).map(city => ({\n    label: city.name,\n    value: city.id,\n    ...city\n  }));\n  const {\n    values,\n    setFieldValue,\n    setValues\n  } = addressFromik;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), inputs.map(input => /*#__PURE__*/_jsxDEV(FormInput, {\n        ...input,\n        value: value[input.name],\n        onChange: onChange\n      }, input.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Select, {\n        id: \"country\",\n        name: \"country\",\n        label: \"country\",\n        options: updatedCountries,\n        value: values.country,\n        onChange: () => {\n          value => {\n            setValues({\n              country: value,\n              state: null,\n              city: null\n            }, false);\n          };\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        id: \"state\",\n        name: \"state\",\n        options: updatedStates(values.country ? values.country.value : null),\n        value: values.state,\n        onChange: () => {\n          value => {\n            setValues({\n              state: value,\n              city: null\n            }, false);\n          };\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        id: \"city\",\n        name: \"city\",\n        options: updatedCities(values.state ? values.state.value : null),\n        value: values.city,\n        onChange: () => {\n          value => setFieldValue(\"city\", value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"/mcdJ8CwQbdBx3RKR+eneVSdkU0=\", false, function () {\n  return [useFormik];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","FormInput","useFormik","Select","csc","App","value","setValue","uame","email","mobileno","password","confirmPassword","inputs","id","name","type","placeholder","errorMessage","label","pattern","required","handleSubmit","e","preventDefault","console","log","onChange","target","addressFromik","initialValues","country","state","city","onSubmit","values","JSON","stringify","countries","getAllCountries","updatedCountries","map","updatedStates","countryId","getStatesOfCountry","updatedCities","stateId","getCitiesOfState","setFieldValue","setValues","input"],"sources":["/home/siddharthprajapati/Desktop/youtube-react-form/src/App.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport \"./app.css\";\nimport FormInput from \"./components/FormInput\";\nimport \"./components/formInput.css\"\nimport { useFormik } from \"formik\";\nimport Select from \"react-select\";\nimport csc from 'country-state-city';\n\n\nconst App = () => {\n\n  const [value, setValue] = useState({\n    uame: \"\",\n    email: \"\",\n    mobileno: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  const inputs = [\n    {\n      id: 1,\n      name: \"name\",\n      type: \"text\",\n      placeholder: \"Name\",\n      errorMessage:\n        \"Name should be 3-16 characters and shouldn't include any special character!\",\n      label: \"Name\",\n      pattern: \"^[A-Za-z0-9]{3,16}$\",\n      required: true,\n    },\n    {\n      id: 2,\n      name: \"email\",\n      type: \"email\",\n      placeholder: \"Email\",\n      errorMessage: \"It should be a valid email address!\",\n      label: \"Email\",\n      required: true,\n    },\n    {\n      id: 3,\n      name: \"mobileno\",\n      type: \"tel\",\n      placeholder: \"Mobile No.\",\n      label: \"Mobile No\",\n    },\n    {\n      id: 4,\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"Password\",\n      errorMessage:\n        \"Password should be 8-20 characters and include at least 1 letter, 1 number and 1 special character!\",\n      label: \"Password\",\n      pattern: `^(?=.*[0-9])(?=.*[a-zA-Z])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,20}$`,\n      required: true,\n    },\n    {\n      id: 5,\n      name: \"confirmPassword\",\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      errorMessage: \"Passwords don't match!\",\n      label: \"Confirm Password\",\n      pattern: value.password,\n      required: true,\n    },\n    // {\n    //   id: 6,\n    //   name: \"country\",\n    //   type: \"text\",\n    //   placeholder: \"Country\",\n    //   label: \"Country\",\n    // },\n  ];\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"Submitted\");\n  };\n\n  const onChange = (e) => {\n    setValue({ ...value, [e.target.name]: e.target.value });\n  };\n\n  const addressFromik = useFormik({\n    initialValues: {\n      country: \"India\",\n      state: null,\n      city: null\n    },\n    onSubmit: (values) => console.log(JSON.stringify(values))\n  });\n\n  const countries = csc.getAllCountries();\n\n  const updatedCountries = countries.map((country) => ({\n    label: country.name,\n    value: country.id,\n    ...country\n  }));\n  const updatedStates = (countryId) =>\n    csc\n      .getStatesOfCountry(countryId)\n      .map((state) => ({ label: state.name, value: state.id, ...state }));\n  const updatedCities = (stateId) =>\n    csc\n      .getCitiesOfState(stateId)\n      .map((city) => ({ label: city.name, value: city.id, ...city }));\n\n  const { values, setFieldValue, setValues } = addressFromik;\n\n  return (\n    <div className=\"app\">\n      <form onSubmit={handleSubmit}>\n        <h1>Register</h1>\n        {inputs.map((input) => (\n          <FormInput\n            key={input.id}\n            {...input}\n            value={value[input.name]}\n            onChange={onChange}\n          />\n        ))}\n        <Select\n          id=\"country\"\n          name=\"country\"\n          label=\"country\"\n          options={updatedCountries}\n          value={values.country}\n\n          onChange={() => {\n            (value) => {\n              setValues({ country: value, state: null, city: null }, false);\n            }\n          }}\n        />\n        <Select\n          id=\"state\"\n          name=\"state\"\n          options={updatedStates(values.country ? values.country.value : null)}\n          value={values.state}\n          onChange={() => {\n            (value) => {\n              setValues({ state: value, city: null }, false);\n            }\n          }}\n        />\n        <Select\n          id=\"city\"\n          name=\"city\"\n          options={updatedCities(values.state ? values.state.value : null)}\n          value={values.city}\n          onChange={() => { (value) => setFieldValue(\"city\", value) }}\n        />\n        <button>Submit</button>\n      </form>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}