{"ast":null,"code":"var _jsxFileName = \"/home/siddharthprajapati/Desktop/youtube-react-form/src/App.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./app.css\";\nimport FormInput from \"./components/FormInput\";\nimport \"./components/formInput.css\";\nimport { useFormik } from \"formik\";\nimport Select from \"react-select\";\nimport csc from 'country-state-city';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // const [inputValue, setInputValue] = useState({\n  //   uame: \"\",\n  //   email: \"\",\n  //   mobileno: \"\",\n  //   password: \"\",\n  //   confirmPassword: \"\",\n  // });\n\n  // const inputs = [\n  //   {\n  //     id: 1,\n  //     name: \"name\",\n  //     type: \"text\",\n  //     placeholder: \"Name\",\n  //     errorMessage:\n  //       \"Name should be 3-16 characters and shouldn't include any special character!\",\n  //     label: \"Name\",\n  //     pattern: \"^[A-Za-z0-9]{3,16}$\",\n  //     required: true,\n  //   },\n  //   {\n  //     id: 2,\n  //     name: \"email\",\n  //     type: \"email\",\n  //     placeholder: \"Email\",\n  //     errorMessage: \"It should be a valid email address!\",\n  //     label: \"Email\",\n  //     required: true,\n  //   },\n  //   {\n  //     id: 3,\n  //     name: \"mobileno\",\n  //     type: \"tel\",\n  //     placeholder: \"Mobile No.\",\n  //     label: \"Mobile No\",\n  //   },\n  //   {\n  //     id: 4,\n  //     name: \"password\",\n  //     type: \"password\",\n  //     placeholder: \"Password\",\n  //     errorMessage:\n  //       \"Password should be 8-20 characters and include at least 1 letter, 1 number and 1 special character!\",\n  //     label: \"Password\",\n  //     pattern: `^(?=.*[0-9])(?=.*[a-zA-Z])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,20}$`,\n  //     required: true,\n  //   },\n  //   {\n  //     id: 5,\n  //     name: \"confirmPassword\",\n  //     type: \"password\",\n  //     placeholder: \"Confirm Password\",\n  //     errorMessage: \"Passwords don't match!\",\n  //     label: \"Confirm Password\",\n  //     pattern: inputValue.password,\n  //     required: true,\n  //   },\n  //   // {\n  //   //   id: 6,\n  //   //   name: \"country\",\n  //   //   type: \"text\",\n  //   //   placeholder: \"Country\",\n  //   //   label: \"Country\",\n  //   // },\n  // ];\n\n  // const handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   console.log(\"Submitted\");\n  // };\n\n  // const onChange = (e) => {\n  //   setInputValue({ ...inputValue, [e.target.name]: e.target.value });\n  // };\n\n  const addressFromik = useFormik({\n    initialValues: {\n      country: \"India\",\n      state: null,\n      city: null\n    },\n    onSubmit: values => console.log(JSON.stringify(values))\n  });\n  const countries = csc.getAllCountries();\n  const updatedCountries = countries.map(country => ({\n    label: country.name,\n    value: country.id,\n    ...country\n  }));\n  const updatedStates = countryId => csc.getStatesOfCountry(countryId).map(state => ({\n    label: state.name,\n    value: state.id,\n    ...state\n  }));\n  const updatedCities = stateId => csc.getCitiesOfState(stateId).map(city => ({\n    label: city.name,\n    value: city.id,\n    ...city\n  }));\n  const {\n    values,\n    setFieldValue,\n    setValues\n  } = addressFromik;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        id: \"country\",\n        name: \"country\",\n        label: \"country\",\n        options: updatedCountries,\n        value: values.country,\n        onChange: value => {\n          setValues({\n            country: value,\n            state: null,\n            city: null\n          }, false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        id: \"state\",\n        name: \"state\",\n        options: updatedStates(values.country ? values.country.value : null),\n        value: values.state,\n        onChange: value => {\n          setValues({\n            state: value,\n            city: null\n          }, false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        id: \"city\",\n        name: \"city\",\n        options: updatedCities(values.state ? values.state.value : null),\n        value: values.city,\n        onChange: value => setFieldValue(\"city\", value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"uvkKP7vXTc2DuqU+6IuCZMHgyyg=\", false, function () {\n  return [useFormik];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","FormInput","useFormik","Select","csc","App","addressFromik","initialValues","country","state","city","onSubmit","values","console","log","JSON","stringify","countries","getAllCountries","updatedCountries","map","label","name","value","id","updatedStates","countryId","getStatesOfCountry","updatedCities","stateId","getCitiesOfState","setFieldValue","setValues","handleSubmit"],"sources":["/home/siddharthprajapati/Desktop/youtube-react-form/src/App.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport \"./app.css\";\nimport FormInput from \"./components/FormInput\";\nimport \"./components/formInput.css\"\nimport { useFormik } from \"formik\";\nimport Select from \"react-select\";\nimport csc from 'country-state-city';\n\n\nconst App = () => {\n\n  // const [inputValue, setInputValue] = useState({\n  //   uame: \"\",\n  //   email: \"\",\n  //   mobileno: \"\",\n  //   password: \"\",\n  //   confirmPassword: \"\",\n  // });\n\n  // const inputs = [\n  //   {\n  //     id: 1,\n  //     name: \"name\",\n  //     type: \"text\",\n  //     placeholder: \"Name\",\n  //     errorMessage:\n  //       \"Name should be 3-16 characters and shouldn't include any special character!\",\n  //     label: \"Name\",\n  //     pattern: \"^[A-Za-z0-9]{3,16}$\",\n  //     required: true,\n  //   },\n  //   {\n  //     id: 2,\n  //     name: \"email\",\n  //     type: \"email\",\n  //     placeholder: \"Email\",\n  //     errorMessage: \"It should be a valid email address!\",\n  //     label: \"Email\",\n  //     required: true,\n  //   },\n  //   {\n  //     id: 3,\n  //     name: \"mobileno\",\n  //     type: \"tel\",\n  //     placeholder: \"Mobile No.\",\n  //     label: \"Mobile No\",\n  //   },\n  //   {\n  //     id: 4,\n  //     name: \"password\",\n  //     type: \"password\",\n  //     placeholder: \"Password\",\n  //     errorMessage:\n  //       \"Password should be 8-20 characters and include at least 1 letter, 1 number and 1 special character!\",\n  //     label: \"Password\",\n  //     pattern: `^(?=.*[0-9])(?=.*[a-zA-Z])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,20}$`,\n  //     required: true,\n  //   },\n  //   {\n  //     id: 5,\n  //     name: \"confirmPassword\",\n  //     type: \"password\",\n  //     placeholder: \"Confirm Password\",\n  //     errorMessage: \"Passwords don't match!\",\n  //     label: \"Confirm Password\",\n  //     pattern: inputValue.password,\n  //     required: true,\n  //   },\n  //   // {\n  //   //   id: 6,\n  //   //   name: \"country\",\n  //   //   type: \"text\",\n  //   //   placeholder: \"Country\",\n  //   //   label: \"Country\",\n  //   // },\n  // ];\n\n  // const handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   console.log(\"Submitted\");\n  // };\n\n  // const onChange = (e) => {\n  //   setInputValue({ ...inputValue, [e.target.name]: e.target.value });\n  // };\n\n  const addressFromik = useFormik({\n    initialValues: {\n      country: \"India\",\n      state: null,\n      city: null\n    },\n    onSubmit: (values) => console.log(JSON.stringify(values))\n  });\n\n  const countries = csc.getAllCountries();\n\n  const updatedCountries = countries.map((country) => ({\n    label: country.name,\n    value: country.id,\n    ...country\n  }));\n  const updatedStates = (countryId) =>\n    csc\n      .getStatesOfCountry(countryId)\n      .map((state) => ({ label: state.name, value: state.id, ...state }));\n  const updatedCities = (stateId) =>\n    csc\n      .getCitiesOfState(stateId)\n      .map((city) => ({ label: city.name, value: city.id, ...city }));\n\n  const { values, setFieldValue, setValues } = addressFromik;\n\n  return (\n    <div className=\"app\">\n      <form onSubmit={handleSubmit}>\n        <h1>Register</h1>\n        {/* {inputs.map((input) => (\n          <FormInput\n            key={input.id}\n            {...input}\n            value={inputValue[input.name]}\n            onChange={onChange}\n          />\n        ))} */}\n        <Select\n          id=\"country\"\n          name=\"country\"\n          label=\"country\"\n          options={updatedCountries}\n          value={values.country}\n\n          onChange={(value) => {\n            setValues({ country: value, state: null, city: null }, false);\n          }}\n        />\n        <Select\n          id=\"state\"\n          name=\"state\"\n          options={updatedStates(values.country ? values.country.value : null)}\n          value={values.state}\n          onChange={(value) => {\n            setValues({ state: value, city: null }, false);\n          }}\n        />\n        <Select\n          id=\"city\"\n          name=\"city\"\n          options={updatedCities(values.state ? values.state.value : null)}\n          value={values.city}\n          onChange={(value) => setFieldValue(\"city\", value)}\n        />\n        <button>Submit</button>\n      </form>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAClB,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAO,4BAA4B;AACnC,SAASC,SAAS,QAAQ,QAAQ;AAClC,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,GAAG,MAAM,oBAAoB;AAAC;AAGrC,MAAMC,GAAG,GAAG,MAAM;EAAA;EAEhB;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA,MAAMC,aAAa,GAAGJ,SAAS,CAAC;IAC9BK,aAAa,EAAE;MACbC,OAAO,EAAE,OAAO;MAChBC,KAAK,EAAE,IAAI;MACXC,IAAI,EAAE;IACR,CAAC;IACDC,QAAQ,EAAGC,MAAM,IAAKC,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,SAAS,CAACJ,MAAM,CAAC;EAC1D,CAAC,CAAC;EAEF,MAAMK,SAAS,GAAGb,GAAG,CAACc,eAAe,EAAE;EAEvC,MAAMC,gBAAgB,GAAGF,SAAS,CAACG,GAAG,CAAEZ,OAAO,KAAM;IACnDa,KAAK,EAAEb,OAAO,CAACc,IAAI;IACnBC,KAAK,EAAEf,OAAO,CAACgB,EAAE;IACjB,GAAGhB;EACL,CAAC,CAAC,CAAC;EACH,MAAMiB,aAAa,GAAIC,SAAS,IAC9BtB,GAAG,CACAuB,kBAAkB,CAACD,SAAS,CAAC,CAC7BN,GAAG,CAAEX,KAAK,KAAM;IAAEY,KAAK,EAAEZ,KAAK,CAACa,IAAI;IAAEC,KAAK,EAAEd,KAAK,CAACe,EAAE;IAAE,GAAGf;EAAM,CAAC,CAAC,CAAC;EACvE,MAAMmB,aAAa,GAAIC,OAAO,IAC5BzB,GAAG,CACA0B,gBAAgB,CAACD,OAAO,CAAC,CACzBT,GAAG,CAAEV,IAAI,KAAM;IAAEW,KAAK,EAAEX,IAAI,CAACY,IAAI;IAAEC,KAAK,EAAEb,IAAI,CAACc,EAAE;IAAE,GAAGd;EAAK,CAAC,CAAC,CAAC;EAEnE,MAAM;IAAEE,MAAM;IAAEmB,aAAa;IAAEC;EAAU,CAAC,GAAG1B,aAAa;EAE1D,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAClB;MAAM,QAAQ,EAAE2B,YAAa;MAAA,wBAC3B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAiB,eASjB,QAAC,MAAM;QACL,EAAE,EAAC,SAAS;QACZ,IAAI,EAAC,SAAS;QACd,KAAK,EAAC,SAAS;QACf,OAAO,EAAEd,gBAAiB;QAC1B,KAAK,EAAEP,MAAM,CAACJ,OAAQ;QAEtB,QAAQ,EAAGe,KAAK,IAAK;UACnBS,SAAS,CAAC;YAAExB,OAAO,EAAEe,KAAK;YAAEd,KAAK,EAAE,IAAI;YAAEC,IAAI,EAAE;UAAK,CAAC,EAAE,KAAK,CAAC;QAC/D;MAAE;QAAA;QAAA;QAAA;MAAA,QACF,eACF,QAAC,MAAM;QACL,EAAE,EAAC,OAAO;QACV,IAAI,EAAC,OAAO;QACZ,OAAO,EAAEe,aAAa,CAACb,MAAM,CAACJ,OAAO,GAAGI,MAAM,CAACJ,OAAO,CAACe,KAAK,GAAG,IAAI,CAAE;QACrE,KAAK,EAAEX,MAAM,CAACH,KAAM;QACpB,QAAQ,EAAGc,KAAK,IAAK;UACnBS,SAAS,CAAC;YAAEvB,KAAK,EAAEc,KAAK;YAAEb,IAAI,EAAE;UAAK,CAAC,EAAE,KAAK,CAAC;QAChD;MAAE;QAAA;QAAA;QAAA;MAAA,QACF,eACF,QAAC,MAAM;QACL,EAAE,EAAC,MAAM;QACT,IAAI,EAAC,MAAM;QACX,OAAO,EAAEkB,aAAa,CAAChB,MAAM,CAACH,KAAK,GAAGG,MAAM,CAACH,KAAK,CAACc,KAAK,GAAG,IAAI,CAAE;QACjE,KAAK,EAAEX,MAAM,CAACF,IAAK;QACnB,QAAQ,EAAGa,KAAK,IAAKQ,aAAa,CAAC,MAAM,EAAER,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAClD,eACF;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAuB;IAAA;MAAA;MAAA;MAAA;IAAA;EAClB;IAAA;IAAA;IAAA;EAAA,QACH;AAEV,CAAC;AAAC,GAnJIlB,GAAG;EAAA,QA6EeH,SAAS;AAAA;AAAA,KA7E3BG,GAAG;AAqJT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}