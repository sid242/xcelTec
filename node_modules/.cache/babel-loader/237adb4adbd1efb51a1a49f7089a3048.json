{"ast":null,"code":"var _jsxFileName = \"/home/siddharthprajapati/Desktop/youtube-react-form/src/App.jsx\";\n// import { useState } from \"react\";\nimport \"./app.css\";\nimport Csc from \"./components/Csc\";\n// import FormInput from \"./components/FormInput\";\n// import \"./components/formInput.css\"\n// import { useFormik } from \"formik\";\n// import Select from \"react-select\";\n// import csc from 'country-state-city';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  // // const [inputValue, setInputValue] = useState({\n  // //   uame: \"\",\n  // //   email: \"\",\n  // //   mobileno: \"\",\n  // //   password: \"\",\n  // //   confirmPassword: \"\",\n  // // });\n\n  // // const inputs = [\n  // //   {\n  // //     id: 1,\n  // //     name: \"name\",\n  // //     type: \"text\",\n  // //     placeholder: \"Name\",\n  // //     errorMessage:\n  // //       \"Name should be 3-16 characters and shouldn't include any special character!\",\n  // //     label: \"Name\",\n  // //     pattern: \"^[A-Za-z0-9]{3,16}$\",\n  // //     required: true,\n  // //   },\n  // //   {\n  // //     id: 2,\n  // //     name: \"email\",\n  // //     type: \"email\",\n  // //     placeholder: \"Email\",\n  // //     errorMessage: \"It should be a valid email address!\",\n  // //     label: \"Email\",\n  // //     required: true,\n  // //   },\n  // //   {\n  // //     id: 3,\n  // //     name: \"mobileno\",\n  // //     type: \"tel\",\n  // //     placeholder: \"Mobile No.\",\n  // //     label: \"Mobile No\",\n  // //   },\n  // //   {\n  // //     id: 4,\n  // //     name: \"password\",\n  // //     type: \"password\",\n  // //     placeholder: \"Password\",\n  // //     errorMessage:\n  // //       \"Password should be 8-20 characters and include at least 1 letter, 1 number and 1 special character!\",\n  // //     label: \"Password\",\n  // //     pattern: `^(?=.*[0-9])(?=.*[a-zA-Z])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,20}$`,\n  // //     required: true,\n  // //   },\n  // //   {\n  // //     id: 5,\n  // //     name: \"confirmPassword\",\n  // //     type: \"password\",\n  // //     placeholder: \"Confirm Password\",\n  // //     errorMessage: \"Passwords don't match!\",\n  // //     label: \"Confirm Password\",\n  // //     pattern: inputValue.password,\n  // //     required: true,\n  // //   },\n  // //   // {\n  // //   //   id: 6,\n  // //   //   name: \"country\",\n  // //   //   type: \"text\",\n  // //   //   placeholder: \"Country\",\n  // //   //   label: \"Country\",\n  // //   // },\n  // // ];\n\n  // const handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   console.log(\"Submitted\");\n  // };\n\n  // // const onChange = (e) => {\n  // //   setInputValue({ ...inputValue, [e.target.name]: e.target.value });\n  // // };\n\n  // const addressFromik = useFormik({\n  //   initialValues: {\n  //     country: \"India\",\n  //     state: null,\n  //     city: null\n  //   },\n  //   onSubmit: (values) => console.log(JSON.stringify(values))\n  // });\n\n  // const countries = csc.getAllCountries();\n\n  // const updatedCountries = countries.map((country) => ({\n  //   label: country.name,\n  //   value: country.id,\n  //   ...country\n  // }));\n  // const updatedStates = (countryId) =>\n  //   csc\n  //     .getStatesOfCountry(countryId)\n  //     .map((state) => ({ label: state.name, value: state.id, ...state }));\n  // const updatedCities = (stateId) =>\n  //   csc\n  //     .getCitiesOfState(stateId)\n  //     .map((city) => ({ label: city.name, value: city.id, ...city }));\n\n  // const { values, setFieldValue, setValues } = addressFromik;\n\n  return /*#__PURE__*/_jsxDEV(Csc, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this)\n\n  //   <div className=\"app\">\n  //     <form onSubmit={handleSubmit}>\n  //       <h1>Register</h1>\n  //       {/* {inputs.map((input) => (\n  //         <FormInput\n  //           key={input.id}\n  //           {...input}\n  //           value={inputValue[input.name]}\n  //           onChange={onChange}\n  //         />\n  //       ))} */}\n  //       <Select\n  //         id=\"country\"\n  //         name=\"country\"\n  //         label=\"country\"\n  //         options={updatedCountries}\n  //         value={values.country}\n\n  //         onChange={(value) => {\n  //           setValues({ country: value, state: null, city: null }, false);\n  //         }}\n  //       />\n  //       <Select\n  //         id=\"state\"\n  //         name=\"state\"\n  //         options={updatedStates(values.country ? values.country.value : null)}\n  //         value={values.state}\n  //         onChange={(value) => {\n  //           setValues({ state: value, city: null }, false);\n  //         }}\n  //       />\n  //       <Select\n  //         id=\"city\"\n  //         name=\"city\"\n  //         options={updatedCities(values.state ? values.state.value : null)}\n  //         value={values.city}\n  //         onChange={(value) => setFieldValue(\"city\", value)}\n  //       />\n  //       <button>Submit</button>\n  //     </form>\n  //   </div>\n  ;\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Csc","App"],"sources":["/home/siddharthprajapati/Desktop/youtube-react-form/src/App.jsx"],"sourcesContent":["// import { useState } from \"react\";\nimport \"./app.css\";\nimport Csc from \"./components/Csc\";\n// import FormInput from \"./components/FormInput\";\n// import \"./components/formInput.css\"\n// import { useFormik } from \"formik\";\n// import Select from \"react-select\";\n// import csc from 'country-state-city';\n\n\nconst App = () => {\n  // // const [inputValue, setInputValue] = useState({\n  // //   uame: \"\",\n  // //   email: \"\",\n  // //   mobileno: \"\",\n  // //   password: \"\",\n  // //   confirmPassword: \"\",\n  // // });\n\n  // // const inputs = [\n  // //   {\n  // //     id: 1,\n  // //     name: \"name\",\n  // //     type: \"text\",\n  // //     placeholder: \"Name\",\n  // //     errorMessage:\n  // //       \"Name should be 3-16 characters and shouldn't include any special character!\",\n  // //     label: \"Name\",\n  // //     pattern: \"^[A-Za-z0-9]{3,16}$\",\n  // //     required: true,\n  // //   },\n  // //   {\n  // //     id: 2,\n  // //     name: \"email\",\n  // //     type: \"email\",\n  // //     placeholder: \"Email\",\n  // //     errorMessage: \"It should be a valid email address!\",\n  // //     label: \"Email\",\n  // //     required: true,\n  // //   },\n  // //   {\n  // //     id: 3,\n  // //     name: \"mobileno\",\n  // //     type: \"tel\",\n  // //     placeholder: \"Mobile No.\",\n  // //     label: \"Mobile No\",\n  // //   },\n  // //   {\n  // //     id: 4,\n  // //     name: \"password\",\n  // //     type: \"password\",\n  // //     placeholder: \"Password\",\n  // //     errorMessage:\n  // //       \"Password should be 8-20 characters and include at least 1 letter, 1 number and 1 special character!\",\n  // //     label: \"Password\",\n  // //     pattern: `^(?=.*[0-9])(?=.*[a-zA-Z])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,20}$`,\n  // //     required: true,\n  // //   },\n  // //   {\n  // //     id: 5,\n  // //     name: \"confirmPassword\",\n  // //     type: \"password\",\n  // //     placeholder: \"Confirm Password\",\n  // //     errorMessage: \"Passwords don't match!\",\n  // //     label: \"Confirm Password\",\n  // //     pattern: inputValue.password,\n  // //     required: true,\n  // //   },\n  // //   // {\n  // //   //   id: 6,\n  // //   //   name: \"country\",\n  // //   //   type: \"text\",\n  // //   //   placeholder: \"Country\",\n  // //   //   label: \"Country\",\n  // //   // },\n  // // ];\n\n  // const handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   console.log(\"Submitted\");\n  // };\n\n  // // const onChange = (e) => {\n  // //   setInputValue({ ...inputValue, [e.target.name]: e.target.value });\n  // // };\n\n  // const addressFromik = useFormik({\n  //   initialValues: {\n  //     country: \"India\",\n  //     state: null,\n  //     city: null\n  //   },\n  //   onSubmit: (values) => console.log(JSON.stringify(values))\n  // });\n\n  // const countries = csc.getAllCountries();\n\n  // const updatedCountries = countries.map((country) => ({\n  //   label: country.name,\n  //   value: country.id,\n  //   ...country\n  // }));\n  // const updatedStates = (countryId) =>\n  //   csc\n  //     .getStatesOfCountry(countryId)\n  //     .map((state) => ({ label: state.name, value: state.id, ...state }));\n  // const updatedCities = (stateId) =>\n  //   csc\n  //     .getCitiesOfState(stateId)\n  //     .map((city) => ({ label: city.name, value: city.id, ...city }));\n\n  // const { values, setFieldValue, setValues } = addressFromik;\n\n  return (\n    <Csc />\n\n    //   <div className=\"app\">\n    //     <form onSubmit={handleSubmit}>\n    //       <h1>Register</h1>\n    //       {/* {inputs.map((input) => (\n    //         <FormInput\n    //           key={input.id}\n    //           {...input}\n    //           value={inputValue[input.name]}\n    //           onChange={onChange}\n    //         />\n    //       ))} */}\n    //       <Select\n    //         id=\"country\"\n    //         name=\"country\"\n    //         label=\"country\"\n    //         options={updatedCountries}\n    //         value={values.country}\n\n    //         onChange={(value) => {\n    //           setValues({ country: value, state: null, city: null }, false);\n    //         }}\n    //       />\n    //       <Select\n    //         id=\"state\"\n    //         name=\"state\"\n    //         options={updatedStates(values.country ? values.country.value : null)}\n    //         value={values.state}\n    //         onChange={(value) => {\n    //           setValues({ state: value, city: null }, false);\n    //         }}\n    //       />\n    //       <Select\n    //         id=\"city\"\n    //         name=\"city\"\n    //         options={updatedCities(values.state ? values.state.value : null)}\n    //         value={values.city}\n    //         onChange={(value) => setFieldValue(\"city\", value)}\n    //       />\n    //       <button>Submit</button>\n    //     </form>\n    //   </div>\n  );\n};\n\nexport default App;\n"],"mappings":";AAAA;AACA,OAAO,WAAW;AAClB,OAAOA,GAAG,MAAM,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AAAA;AAGA,MAAMC,GAAG,GAAG,MAAM;EAChB;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA,oBACE,QAAC,GAAG;IAAA;IAAA;IAAA;EAAA;;EAEJ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAEJ,CAAC;AAAC,KApJIA,GAAG;AAsJT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}