{"ast":null,"code":"var _jsxFileName = \"/home/siddharthprajapati/Desktop/youtube-react-form/src/components/Csc.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport \"./styles.css\";\nimport { useFormik } from \"formik\";\nimport Select from \"react-select\";\nimport csc from \"country-state-city\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Csc() {\n  _s();\n  const addressFromik = useFormik({\n    initialValues: {\n      country: \"India\",\n      state: null,\n      city: null\n    },\n    onSubmit: values => console.log(JSON.stringify(values))\n  });\n  const countries = csc.getAllCountries();\n  const updatedCountries = countries.map(country => ({\n    label: country.name,\n    value: country.id,\n    ...country\n  }));\n  const updatedStates = countryId => csc.getStatesOfCountry(countryId).map(state => ({\n    label: state.name,\n    value: state.id,\n    ...state\n  }));\n  const updatedCities = stateId => csc.getCitiesOfState(stateId).map(city => ({\n    label: city.name,\n    value: city.id,\n    ...city\n  }));\n  const {\n    values,\n    handleSubmit,\n    setFieldValue,\n    setValues\n  } = addressFromik;\n  useEffect(() => {}, [values]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Select, {\n        id: \"country\",\n        name: \"country\",\n        label: \"country\",\n        options: updatedCountries,\n        value: values.country\n        // onChange={value => {\n        //   setFieldValue(\"country\", value);\n        //   setFieldValue(\"state\", null);\n        //   setFieldValue(\"city\", null);\n        // }}\n        ,\n        onChange: value => {\n          setValues({\n            country: value,\n            state: null,\n            city: null\n          }, false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        id: \"state\",\n        name: \"state\",\n        options: updatedStates(values.country ? values.country.value : null),\n        value: values.state,\n        onChange: value => {\n          setValues({\n            state: value,\n            city: null\n          }, false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        id: \"city\",\n        name: \"city\",\n        options: updatedCities(values.state ? values.state.value : null),\n        value: values.city,\n        onChange: value => setFieldValue(\"city\", value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: JSON.stringify(csc.get)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(Csc, \"sHNEWIcgQyPJb99T7cPf1Vf/6Lk=\", false, function () {\n  return [useFormik];\n});\n_c = Csc;\nvar _c;\n$RefreshReg$(_c, \"Csc\");","map":{"version":3,"names":["React","useEffect","useFormik","Select","csc","Csc","addressFromik","initialValues","country","state","city","onSubmit","values","console","log","JSON","stringify","countries","getAllCountries","updatedCountries","map","label","name","value","id","updatedStates","countryId","getStatesOfCountry","updatedCities","stateId","getCitiesOfState","handleSubmit","setFieldValue","setValues","get"],"sources":["/home/siddharthprajapati/Desktop/youtube-react-form/src/components/Csc.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport \"./styles.css\";\nimport { useFormik } from \"formik\";\nimport Select from \"react-select\";\nimport csc from \"country-state-city\";\n\nexport default function Csc() {\n    const addressFromik = useFormik({\n        initialValues: {\n            country: \"India\",\n            state: null,\n            city: null\n        },\n        onSubmit: (values) => console.log(JSON.stringify(values))\n    });\n\n    const countries = csc.getAllCountries();\n\n    const updatedCountries = countries.map((country) => ({\n        label: country.name,\n        value: country.id,\n        ...country\n    }));\n    const updatedStates = (countryId) =>\n        csc\n            .getStatesOfCountry(countryId)\n            .map((state) => ({ label: state.name, value: state.id, ...state }));\n    const updatedCities = (stateId) =>\n        csc\n            .getCitiesOfState(stateId)\n            .map((city) => ({ label: city.name, value: city.id, ...city }));\n\n    const { values, handleSubmit, setFieldValue, setValues } = addressFromik;\n\n    useEffect(() => { }, [values]);\n\n    return (\n        <div className=\"App\">\n            <form onSubmit={handleSubmit}>\n                <Select\n                    id=\"country\"\n                    name=\"country\"\n                    label=\"country\"\n                    options={updatedCountries}\n                    value={values.country}\n                    // onChange={value => {\n                    //   setFieldValue(\"country\", value);\n                    //   setFieldValue(\"state\", null);\n                    //   setFieldValue(\"city\", null);\n                    // }}\n                    onChange={(value) => {\n                        setValues({ country: value, state: null, city: null }, false);\n                    }}\n                />\n                <Select\n                    id=\"state\"\n                    name=\"state\"\n                    options={updatedStates(values.country ? values.country.value : null)}\n                    value={values.state}\n                    onChange={(value) => {\n                        setValues({ state: value, city: null }, false);\n                    }}\n                />\n                <Select\n                    id=\"city\"\n                    name=\"city\"\n                    options={updatedCities(values.state ? values.state.value : null)}\n                    value={values.city}\n                    onChange={(value) => setFieldValue(\"city\", value)}\n                />\n                <button type=\"submit\">Submit</button>\n                <p>{JSON.stringify(csc.get)}</p>\n            </form>\n        </div>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}