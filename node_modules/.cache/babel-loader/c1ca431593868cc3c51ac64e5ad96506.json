{"ast":null,"code":"var _jsxFileName = \"/home/siddharthprajapati/Desktop/youtube-react-form/src/App.jsx\",\n  _s = $RefreshSig$();\n// import { useState } from \"react\";\nimport \"./app.css\";\n// import FormInput from \"./components/FormInput\";\n// import \"./components/formInput.css\"\n// import { useFormik } from \"formik\";\n// import Select from \"react-select\";\n// import csc from 'country-state-city';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // const [inputValue, setInputValue] = useState({\n  //   uame: \"\",\n  //   email: \"\",\n  //   mobileno: \"\",\n  //   password: \"\",\n  //   confirmPassword: \"\",\n  // });\n\n  // const inputs = [\n  //   {\n  //     id: 1,\n  //     name: \"name\",\n  //     type: \"text\",\n  //     placeholder: \"Name\",\n  //     errorMessage:\n  //       \"Name should be 3-16 characters and shouldn't include any special character!\",\n  //     label: \"Name\",\n  //     pattern: \"^[A-Za-z0-9]{3,16}$\",\n  //     required: true,\n  //   },\n  //   {\n  //     id: 2,\n  //     name: \"email\",\n  //     type: \"email\",\n  //     placeholder: \"Email\",\n  //     errorMessage: \"It should be a valid email address!\",\n  //     label: \"Email\",\n  //     required: true,\n  //   },\n  //   {\n  //     id: 3,\n  //     name: \"mobileno\",\n  //     type: \"tel\",\n  //     placeholder: \"Mobile No.\",\n  //     label: \"Mobile No\",\n  //   },\n  //   {\n  //     id: 4,\n  //     name: \"password\",\n  //     type: \"password\",\n  //     placeholder: \"Password\",\n  //     errorMessage:\n  //       \"Password should be 8-20 characters and include at least 1 letter, 1 number and 1 special character!\",\n  //     label: \"Password\",\n  //     pattern: `^(?=.*[0-9])(?=.*[a-zA-Z])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,20}$`,\n  //     required: true,\n  //   },\n  //   {\n  //     id: 5,\n  //     name: \"confirmPassword\",\n  //     type: \"password\",\n  //     placeholder: \"Confirm Password\",\n  //     errorMessage: \"Passwords don't match!\",\n  //     label: \"Confirm Password\",\n  //     pattern: inputValue.password,\n  //     required: true,\n  //   },\n  //   // {\n  //   //   id: 6,\n  //   //   name: \"country\",\n  //   //   type: \"text\",\n  //   //   placeholder: \"Country\",\n  //   //   label: \"Country\",\n  //   // },\n  // ];\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(\"Submitted\");\n  };\n\n  // const onChange = (e) => {\n  //   setInputValue({ ...inputValue, [e.target.name]: e.target.value });\n  // };\n\n  const addressFromik = useFormik({\n    initialValues: {\n      country: \"India\",\n      state: null,\n      city: null\n    },\n    onSubmit: values => console.log(JSON.stringify(values))\n  });\n  const countries = csc.getAllCountries();\n  const updatedCountries = countries.map(country => ({\n    label: country.name,\n    value: country.id,\n    ...country\n  }));\n  const updatedStates = countryId => csc.getStatesOfCountry(countryId).map(state => ({\n    label: state.name,\n    value: state.id,\n    ...state\n  }));\n  const updatedCities = stateId => csc.getCitiesOfState(stateId).map(city => ({\n    label: city.name,\n    value: city.id,\n    ...city\n  }));\n  const {\n    values,\n    setFieldValue,\n    setValues\n  } = addressFromik;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        id: \"country\",\n        name: \"country\",\n        label: \"country\",\n        options: updatedCountries,\n        value: values.country,\n        onChange: value => {\n          setValues({\n            country: value,\n            state: null,\n            city: null\n          }, false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        id: \"state\",\n        name: \"state\",\n        options: updatedStates(values.country ? values.country.value : null),\n        value: values.state,\n        onChange: value => {\n          setValues({\n            state: value,\n            city: null\n          }, false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        id: \"city\",\n        name: \"city\",\n        options: updatedCities(values.state ? values.state.value : null),\n        value: values.city,\n        onChange: value => setFieldValue(\"city\", value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"uvkKP7vXTc2DuqU+6IuCZMHgyyg=\", true);\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["App","handleSubmit","e","preventDefault","console","log","addressFromik","useFormik","initialValues","country","state","city","onSubmit","values","JSON","stringify","countries","csc","getAllCountries","updatedCountries","map","label","name","value","id","updatedStates","countryId","getStatesOfCountry","updatedCities","stateId","getCitiesOfState","setFieldValue","setValues"],"sources":["/home/siddharthprajapati/Desktop/youtube-react-form/src/App.jsx"],"sourcesContent":["// import { useState } from \"react\";\nimport \"./app.css\";\n// import FormInput from \"./components/FormInput\";\n// import \"./components/formInput.css\"\n// import { useFormik } from \"formik\";\n// import Select from \"react-select\";\n// import csc from 'country-state-city';\n\n\nconst App = () => {\n\n  // const [inputValue, setInputValue] = useState({\n  //   uame: \"\",\n  //   email: \"\",\n  //   mobileno: \"\",\n  //   password: \"\",\n  //   confirmPassword: \"\",\n  // });\n\n  // const inputs = [\n  //   {\n  //     id: 1,\n  //     name: \"name\",\n  //     type: \"text\",\n  //     placeholder: \"Name\",\n  //     errorMessage:\n  //       \"Name should be 3-16 characters and shouldn't include any special character!\",\n  //     label: \"Name\",\n  //     pattern: \"^[A-Za-z0-9]{3,16}$\",\n  //     required: true,\n  //   },\n  //   {\n  //     id: 2,\n  //     name: \"email\",\n  //     type: \"email\",\n  //     placeholder: \"Email\",\n  //     errorMessage: \"It should be a valid email address!\",\n  //     label: \"Email\",\n  //     required: true,\n  //   },\n  //   {\n  //     id: 3,\n  //     name: \"mobileno\",\n  //     type: \"tel\",\n  //     placeholder: \"Mobile No.\",\n  //     label: \"Mobile No\",\n  //   },\n  //   {\n  //     id: 4,\n  //     name: \"password\",\n  //     type: \"password\",\n  //     placeholder: \"Password\",\n  //     errorMessage:\n  //       \"Password should be 8-20 characters and include at least 1 letter, 1 number and 1 special character!\",\n  //     label: \"Password\",\n  //     pattern: `^(?=.*[0-9])(?=.*[a-zA-Z])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,20}$`,\n  //     required: true,\n  //   },\n  //   {\n  //     id: 5,\n  //     name: \"confirmPassword\",\n  //     type: \"password\",\n  //     placeholder: \"Confirm Password\",\n  //     errorMessage: \"Passwords don't match!\",\n  //     label: \"Confirm Password\",\n  //     pattern: inputValue.password,\n  //     required: true,\n  //   },\n  //   // {\n  //   //   id: 6,\n  //   //   name: \"country\",\n  //   //   type: \"text\",\n  //   //   placeholder: \"Country\",\n  //   //   label: \"Country\",\n  //   // },\n  // ];\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"Submitted\");\n  };\n\n  // const onChange = (e) => {\n  //   setInputValue({ ...inputValue, [e.target.name]: e.target.value });\n  // };\n\n  const addressFromik = useFormik({\n    initialValues: {\n      country: \"India\",\n      state: null,\n      city: null\n    },\n    onSubmit: (values) => console.log(JSON.stringify(values))\n  });\n\n  const countries = csc.getAllCountries();\n\n  const updatedCountries = countries.map((country) => ({\n    label: country.name,\n    value: country.id,\n    ...country\n  }));\n  const updatedStates = (countryId) =>\n    csc\n      .getStatesOfCountry(countryId)\n      .map((state) => ({ label: state.name, value: state.id, ...state }));\n  const updatedCities = (stateId) =>\n    csc\n      .getCitiesOfState(stateId)\n      .map((city) => ({ label: city.name, value: city.id, ...city }));\n\n  const { values, setFieldValue, setValues } = addressFromik;\n\n  return (\n    <div className=\"app\">\n      <form onSubmit={handleSubmit}>\n        <h1>Register</h1>\n        {/* {inputs.map((input) => (\n          <FormInput\n            key={input.id}\n            {...input}\n            value={inputValue[input.name]}\n            onChange={onChange}\n          />\n        ))} */}\n        <Select\n          id=\"country\"\n          name=\"country\"\n          label=\"country\"\n          options={updatedCountries}\n          value={values.country}\n\n          onChange={(value) => {\n            setValues({ country: value, state: null, city: null }, false);\n          }}\n        />\n        <Select\n          id=\"state\"\n          name=\"state\"\n          options={updatedStates(values.country ? values.country.value : null)}\n          value={values.state}\n          onChange={(value) => {\n            setValues({ state: value, city: null }, false);\n          }}\n        />\n        <Select\n          id=\"city\"\n          name=\"city\"\n          options={updatedCities(values.state ? values.state.value : null)}\n          value={values.city}\n          onChange={(value) => setFieldValue(\"city\", value)}\n        />\n        <button>Submit</button>\n      </form>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}